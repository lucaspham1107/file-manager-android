plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.firebase.crashlytics'
    id 'io.github.islamkhsh.xdimen'
}

android {
    namespace 'com.appforlife.filemanager'
    compileSdk 33

    signingConfigs {
        keystore {
            keyAlias 'appforlife@2023'
            keyPassword 'appforlife@2023'
            storeFile file('../keystore/keystore')
            storePassword 'appforlife@2023'
        }
    }

    defaultConfig {
        applicationId "com.appforlife.filemanager"
        minSdk 24
        targetSdk 33
        versionCode 3
        versionName "1.1"
        multiDexEnabled true
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "true"]
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [crashlyticsCollectionEnabled: "false"]
        }
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            //no ads and full features - for dev
            resValue "string", "app_name", "File Manager (dev)"
            buildConfigField("Boolean", "SHOW_ADS", "true")
            buildConfigField("Boolean", "TESTING_ADS", "true")
            buildConfigField(
                    "Boolean",
                    "TESTING_PURCHASE",
                    "true"
            )
            buildConfigField("Boolean", "QUOTA_LIMIT", "false")
            buildConfigField(
                    "Boolean",
                    "LOG_EVENT_TRACKING",
                    "false"
            )
            buildConfigField(
                    "Boolean",
                    "APPLY_TEST_VERSION",
                    "true"
            )
            dimension "default"
            signingConfig signingConfigs.keystore
        }

        production {
            buildConfigField("Boolean", "SHOW_ADS", "true")
            buildConfigField("Boolean", "TESTING_ADS", "false")
            buildConfigField(
                    "Boolean",
                    "TESTING_PURCHASE",
                    "false"
            )
            buildConfigField("Boolean", "QUOTA_LIMIT", "true")
            buildConfigField(
                    "Boolean",
                    "LOG_EVENT_TRACKING",
                    "true"
            )
            buildConfigField(
                    "Boolean",
                    "APPLY_TEST_VERSION",
                    "false"
            )
            //enable ads and subscription required
            resValue "string", "app_name", "File Manager"
            dimension "default"
            signingConfig signingConfigs.keystore
        }
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
    kapt {
        correctErrorTypes true
    }

    packagingOptions {
        exclude 'META-INF/*'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation "com.airbnb.android:lottie:4.2.2"


    implementation "com.android.support:multidex:1.0.3"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.fragment:fragment-ktx:1.5.2"

    // navigation
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.5.2"
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.2"
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.2"

    implementation("com.afollestad.material-dialogs:lifecycle:3.3.0")

    implementation 'com.google.code.gson:gson:2.10'

    def billing_version = "5.0.0"

    implementation "com.android.billingclient:billing-ktx:$billing_version"

    implementation 'com.google.android.gms:play-services-ads:22.1.0'

    //Datetime
    implementation 'joda-time:joda-time:2.11.0'

    implementation 'io.github.ParkSangGwon:tedpermission-coroutine:3.3.0'

    implementation 'com.github.bumptech.glide:glide:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'
    //indicator
    implementation 'com.tbuonomo:dotsindicator:4.2'

    implementation 'com.patrickpissurno:ripple-effect:1.3.1'
    implementation 'com.google.android.gms:play-services-ads:22.1.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:2.46.1"
    kapt "com.google.dagger:hilt-android-compiler:2.46.1"
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'

    implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    implementation "io.reactivex.rxjava3:rxjava:3.0.8"
    implementation "io.reactivex.rxjava3:rxkotlin:3.0.0"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    implementation 'com.github.mmmelik:RoundedImageView:v1.0.1'
}

xdimen {
    deleteOldXdimen.set(true)
    designWidth.set(360) // required
    designDpi.set(mdpi())
    targetDevicesWidth.set(phonePortrait)
    dimensRange {
        minDimen.set(-10)
        maxDimen.set(500)
        step.set(0.5d)
    }
    fontsRange {
        minDimen.set(10)
        maxDimen.set(60)
        step.set(0.5d)
    }
}